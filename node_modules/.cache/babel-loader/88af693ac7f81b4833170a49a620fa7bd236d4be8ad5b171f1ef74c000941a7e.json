{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samia Shaikh\\\\Downloads\\\\FinalRough - Copy (2)\\\\frontend\\\\src\\\\pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport HR from \"../images/HR.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //Toast Functions\n  const notifyError = msg => toast.error(msg);\n  const notifySuccess = msg => toast.success(msg);\n\n  //Email and Password Regex\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n  const postData = () => {\n    //Checking email and password\n    if (!emailRegex.test(email)) {\n      notifyError(\"Empty Fields are not allowed\");\n      return;\n    } else if (!passwordRegex.test(password)) {\n      notifyError(\"Password must contain atleast eight characters, including atleast one number and includes both lower and upper case letters and special characters\");\n      return;\n    }\n\n    //Sending Data To Server\n    fetch(\"http://localhost:8080/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userName: userName,\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        notifyError(data.error);\n      } else {\n        notifySuccess(data.message);\n        navigate('/');\n      }\n      console.log(data);\n    });\n  };\n  const google = () => {\n    window.open(\"http://localhost:8080/auth/google\", \"_self\");\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <input type='text' value={userName} name='userName' placeholder='User Name' onChange={(e)=>{setUserName(e.target.value)}}/>\n    //     <br/>\n    //     <input type='email' value={email} name='email' placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}}/>\n    //     <br/>\n    //     <input type='password' value={password} name='password' placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}}/>\n    //     <br/>\n    //     <button onClick={postData}>Sign Up</button>\n    //     <br/>\n    //     <p>Already have an account? <Link to=\"/\"><strong>Sign In</strong></Link></p>\n    //   </div>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"HR\",\n            children: \"Human Resource Management \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexx\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"HRR\",\n                src: HR\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"FormContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"Reg\",\n                children: \"Registration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: userName,\n                name: \"userName\",\n                placeholder: \"Full Name\",\n                onChange: e => {\n                  setUserName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: email,\n                name: \"email\",\n                placeholder: \"Email Address\",\n                onChange: e => {\n                  setEmail(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: password,\n                name: \"password\",\n                placeholder: \"Password\",\n                onChange: e => {\n                  setPassword(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit\",\n                onClick: postData,\n                children: \" Register \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 54\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon submit\",\n                onClick: () => {\n                  google();\n                  notifySuccess(\"SignedIn Successfully\");\n                },\n                children: \"SignUp with Google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(SignUp, \"telcb0f40VKm5V13zhV5B/7iP+A=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Link","useNavigate","toast","HR","jsxDEV","_jsxDEV","SignUp","_s","navigate","userName","setUserName","email","setEmail","password","setPassword","notifyError","msg","error","notifySuccess","success","emailRegex","passwordRegex","postData","test","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","console","log","google","window","open","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","type","value","name","placeholder","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Samia Shaikh/Downloads/FinalRough - Copy (2)/frontend/src/pages/SignUp.js"],"sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport HR from \"../images/HR.gif\"\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n  const navigate = useNavigate();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  //Toast Functions\r\n  const notifyError=(msg)=> toast.error(msg);\r\n  const notifySuccess=(msg)=> toast.success(msg);\r\n\r\n  //Email and Password Regex\r\n  const emailRegex= /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  const passwordRegex= /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\r\n\r\n\r\n  const postData=()=>{\r\n\r\n    //Checking email and password\r\n    if(!emailRegex.test(email))\r\n    {\r\n        notifyError(\"Empty Fields are not allowed\");\r\n        return\r\n    }\r\n    else if(!passwordRegex.test(password))\r\n    {\r\n        notifyError(\"Password must contain atleast eight characters, including atleast one number and includes both lower and upper case letters and special characters\");\r\n        return\r\n    }\r\n\r\n    //Sending Data To Server\r\n    fetch(\"http://localhost:8080/auth/signup\",{\r\n        method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            \r\n            userName: userName,\r\n            email: email,\r\n            password: password\r\n\r\n        })\r\n    }).then(res=>res.json())\r\n      .then(data=>{\r\n        if(data.error)\r\n        {\r\n            notifyError(data.error)\r\n        }\r\n        else\r\n        {\r\n            notifySuccess(data.message)\r\n            navigate('/')\r\n        }\r\n        \r\n        console.log(data)\r\n    })\r\n\r\n  \r\n}\r\nconst google = () => {\r\n    window.open(\"http://localhost:8080/auth/google\", \"_self\");\r\n    \r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //     <input type='text' value={userName} name='userName' placeholder='User Name' onChange={(e)=>{setUserName(e.target.value)}}/>\r\n    //     <br/>\r\n    //     <input type='email' value={email} name='email' placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}}/>\r\n    //     <br/>\r\n    //     <input type='password' value={password} name='password' placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}}/>\r\n    //     <br/>\r\n    //     <button onClick={postData}>Sign Up</button>\r\n    //     <br/>\r\n    //     <p>Already have an account? <Link to=\"/\"><strong>Sign In</strong></Link></p>\r\n    //   </div>\r\n    <div>\r\n         <div className=\"login\">\r\n      \r\n      <div className=\"wrapper2\">\r\n            <h3 className=\"HR\">Human Resource Management </h3>\r\n            <div className=\"flexx\">\r\n      <div>\r\n    \r\n    <img className=\"HRR\" src={HR}/>\r\n    </div>\r\n            <div className=\"FormContent\">\r\n    <h2 className=\"Reg\" >Registration</h2>\r\n            <input type=\"text\" value={userName} name='userName' placeholder=\"Full Name\" onChange={(e)=>{setUserName(e.target.value)}} />\r\n            <input type='email' value={email} name='email' placeholder='Email Address' onChange={(e)=>{setEmail(e.target.value)}} />\r\n            <input type='password' value={password} name='password' placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}} />\r\n            <button className=\"submit\" onClick={postData}> Register </button>\r\n\r\n            <p>Already have an account? <Link to=\"/\"><strong>Sign In</strong></Link></p>\r\n            <button className=\"icon submit\" onClick={() => { google(); notifySuccess(\"SignedIn Successfully\") }}>\r\n                SignUp with Google \r\n             \r\n              </button>\r\n              </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      \r\n    \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}